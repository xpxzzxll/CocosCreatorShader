// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        Time: { value: 0.0 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  uniform anonymity {
    float Time;
  };
  #endif

  const float speed = 2.0;
  const float bendFactor = 0.2;

  void main () {
    vec4 o = vec4(1, 1, 1, 1);

    #if USE_TEXTURE
    vec2 _TexSize = vec2(512.0, 512.0);
    float _FenceWidth = 30.0;
    float _AnimTime = 1.0;
    float _DelayTime = 0.2;
    float _LoopInterval = 3.0;
    float looptimes = floor(Time / _LoopInterval);
    float starttime = looptimes * _LoopInterval; // 本次动画开始时间
    float passtime = Time - starttime; //本次动画流逝时间
    if (passtime <= _DelayTime) {
      if (int(mod(looptimes, 2.0)) == 0) {
        o = vec4(0, 0, 0, 0);
      }else {
        CCTexture(texture, v_uv0, o);
      }
    }else {
      float progress = (passtime - _DelayTime) / _AnimTime; //底部右边界
      float fence_rate = mod(v_uv0.x * _TexSize.x, _FenceWidth) / _FenceWidth;
      if (progress < fence_rate) {
          o = vec4(0, 0, 0, 0);
      } else {
          CCTexture(texture, v_uv0, o);
      }
    }
    #endif

    o *= v_color;

    ALPHA_TEST(o);

    gl_FragColor = o;
  }
}%
